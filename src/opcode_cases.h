/*
	This file is automatically generated by make_func.
	do not make any manual changes to this file.
*/

    case F_LOCAL_NAME-F_OFFSET: f_local_name(); break;
    case F_PUSH_LOCAL_VARIABLE_LVALUE-F_OFFSET: f_push_local_variable_lvalue(); break;
    case F_INDEX-F_OFFSET: f_index(); break;
    case F_ASSIGN_AND_POP-F_OFFSET: f_assign_and_pop(); break;
    case F_BRANCH_WHEN_ZERO-F_OFFSET: f_branch_when_zero(); break;
    case F_MARK-F_OFFSET: f_mark(); break;
    case F_CONST0-F_OFFSET: f_const0(); break;
    case F_SHORT_STRING-F_OFFSET: f_short_string(); break;
    case F_IDENTIFIER-F_OFFSET: f_identifier(); break;
    case F_RETURN-F_OFFSET: f_return(); break;
    case F_BYTE-F_OFFSET: f_byte(); break;
    case F_CONST1-F_OFFSET: f_const1(); break;
    case F_SHORT_CONSTANT_FUNCTION-F_OFFSET: f_short_constant_function(); break;
    case F_STRING-F_OFFSET: f_string(); break;
    case F_BRANCH-F_OFFSET: f_branch(); break;
    case F_NOT-F_OFFSET: f_not(); break;
    case F_EQ-F_OFFSET: f_eq(); break;
    case F_PUSH_IDENTIFIER_LVALUE-F_OFFSET: f_push_identifier_lvalue(); break;
    case F_PUSH_INDEXED_LVALUE-F_OFFSET: f_push_indexed_lvalue(); break;
    case F_ASSIGN-F_OFFSET: f_assign(); break;
    case F_INC_AND_POP-F_OFFSET: f_inc_and_pop(); break;
    case F_BRANCH_WHEN_NON_ZERO-F_OFFSET: f_branch_when_non_zero(); break;
    case F_INC_LOOP-F_OFFSET: f_inc_loop(); break;
    case F_LT-F_OFFSET: f_lt(); break;
    case F_SSCANF-F_OFFSET: f_sscanf(); break;
    case F_SWITCH-F_OFFSET: f_switch(); break;
    case F_SUBTRACT-F_OFFSET: f_subtract(); break;
    case F_ADD-F_OFFSET: f_add(); break;
    case F_POP_N_ELEMS-F_OFFSET: f_pop_n_elems(); break;
    case F_DEC_LOOP-F_OFFSET: f_dec_loop(); break;
    case F_LOR-F_OFFSET: f_lor(); break;
    case F_CONST_1-F_OFFSET: f_const_1(); break;
    case F_LAND-F_OFFSET: f_land(); break;
    case F_DUMB_RETURN-F_OFFSET: f_dumb_return(); break;
    case F_DEC_AND_POP-F_OFFSET: f_dec_and_pop(); break;
    case F_NE-F_OFFSET: f_ne(); break;
    case F_SHORT_CONSTANT-F_OFFSET: f_short_constant(); break;
    case F_POP_VALUE-F_OFFSET: f_pop_value(); break;
    case F_PUSH_LTOSVAL-F_OFFSET: f_push_ltosval(); break;
    case F_FOREACH-F_OFFSET: f_foreach(); break;
    case F_TAILRECURSE-F_OFFSET: f_tailrecurse(); break;
    case F_NEG_BYTE-F_OFFSET: f_neg_byte(); break;
    case F_OR-F_OFFSET: f_or(); break;
    case F_SHORT-F_OFFSET: f_short(); break;
    case F_AND-F_OFFSET: f_and(); break;
    case F_DIVIDE-F_OFFSET: f_divide(); break;
    case F_GT-F_OFFSET: f_gt(); break;
    case F_CAST_TO_OBJECT-F_OFFSET: f_cast_to_object(); break;
    case F_PUSH_SIMUL_EFUN-F_OFFSET: f_push_simul_efun(); break;
    case F_MULTIPLY-F_OFFSET: f_multiply(); break;
    case F_CAST_TO_STRING-F_OFFSET: f_cast_to_string(); break;
    case F_NEGATE-F_OFFSET: f_negate(); break;
    case F_MOD-F_OFFSET: f_mod(); break;
    case F_DEC-F_OFFSET: f_dec(); break;
    case F_NUMBER-F_OFFSET: f_number(); break;
    case F_CAST_TO_INT-F_OFFSET: f_cast_to_int(); break;
    case F_CATCH-F_OFFSET: f_catch(); break;
    case F_CONSTANT_FUNCTION-F_OFFSET: f_constant_function(); break;
    case F_FLOAT-F_OFFSET: f_float(); break;
    case F_CAST_TO_FLOAT-F_OFFSET: f_cast_to_float(); break;
    case F_PUSH_ARRAY-F_OFFSET: f_push_array(); break;
    case F_CAST_TO_FUNCTION-F_OFFSET: f_cast_to_function(); break;
    case F_SWAP_VARIABLES-F_OFFSET: f_swap_variables(); break;
    case F_DEC_NEQ_LOOP-F_OFFSET: f_dec_neq_loop(); break;
    case F_INC_NEQ_LOOP-F_OFFSET: f_inc_neq_loop(); break;
    case F_CAST_TO_REGEXP-F_OFFSET: f_cast_to_regexp(); break;
    case F_RSH-F_OFFSET: f_rsh(); break;
    case F_LSH-F_OFFSET: f_lsh(); break;
    case F_XOR-F_OFFSET: f_xor(); break;
    case F_COMPL-F_OFFSET: f_compl(); break;
    case F_LE-F_OFFSET: f_le(); break;
    case F_GE-F_OFFSET: f_ge(); break;
    case F_POST_DEC-F_OFFSET: f_post_dec(); break;
    case F_POST_INC-F_OFFSET: f_post_inc(); break;
    case F_INC-F_OFFSET: f_inc(); break;
    case F_SHORT_BRANCH_WHEN_NON_ZERO-F_OFFSET: f_short_branch_when_non_zero(); break;
    case F_SHORT_BRANCH_WHEN_ZERO-F_OFFSET: f_short_branch_when_zero(); break;
    case F_SHORT_BRANCH-F_OFFSET: f_short_branch(); break;
    case F_SWAP-F_OFFSET: f_swap(); break;
    case F_PUSH_COST-F_OFFSET: f_push_cost(); break;
    case F_CONSTANT-F_OFFSET: f_constant(); break;
    case F_INDIRECT-F_OFFSET: f_indirect(); break;
    case F_DUP-F_OFFSET: f_dup(); break;
